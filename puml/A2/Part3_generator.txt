@startuml

class Main {
    -main(String[]): void
}

interface MeshGenerator {
    +int width
    ~int height
    #int square_size
    -generate(): Mesh
} 


class GridMeshGenerator {
    -^generate(): Mesh
}

class IrregularMeshGenerator {
    +int num_iterations
    +int numPolygons
    -^generate(): Mesh
    -extractCentroidPolygon(): double[]
} 

class Vertex {
    -x: double
    -y: double
    -properties: List<Property>
}
class Segment {
    -v1Idx: int
    -v2Idx: int
    +getV1Idx(): int
    +getV2Idx(): int
    +getPropertiesList(): List<Property>
}
class Polygon {
    -centroid_idx: int
    -segment_idxs: int[]
    neighbors_idxs: int[]
}
class MeshFactory {
    +read(String): Mesh
    +write(Mesh, String): void
}
class Property {
    -key: String
    -value: String
}

interface Extractor {
    extractValues(): String
}

Main .. IrregularMeshGenerator
Main .. GridMeshGenerator
Main .. MeshFactory
MeshGenerator <|.. IrregularMeshGenerator
MeshGenerator <|.. GridMeshGenerator

MeshGenerator *--> ListPropertyAverageExtractor
MeshGenerator *--> PropertyAverageExtractor
Extractor <|.. ListPropertyAverageExtractor
Extractor <|.. PropertyAverageExtractor

Mesh *--> Vertex : 0..n \n{ordered} 
Mesh *--> Segment : 0..n \n{ordered}
Mesh *--> Polygon : 0..n \n{ordered}
Mesh *--> Property : 0..n \n{ordered}
Vertex *--> Property : 0..n \n{ordered}
Segment *--> Property : 0..n \n{ordered}
Polygon *--> Property : 0..n \n{ordered}
Structs .. Vertex
Structs .. Segment
Structs .. Polygon
Structs .. Mesh

GridMeshGenerator .. Mesh
IrregularMeshGenerator .. Mesh

@enduml